name: "steadybit/definitions/experiments/recovery-of-single-container"
type: experiment
description: >
  Kubernetes deployment recovers when a container is killed.
  Use this to verify that restarts are possible.
  The affected pod should be replaced within a given time â€“ ending with the Kubernetes deployment back in the ready state.
inputs:
  - name: environmentName
  - name: teamKey
  - name: k8sClusterName
  - name: k8sNamespaceName
  - name: k8sDeploymentName
  - name: containerName
  - name: maximumRecoveryTime
    defaultValue: "2m"
experiment:
  name: "{{k8sNamespaceName}}/{{k8sDeploymentName}} single container failure"
  hypothesis: "When a single container from {{k8sNamespaceName}}/{{k8sDeploymentName}} fails then within {{maximumRecoveryTime}} all pods are ready."
  environment: "{{environmentName}}"
  team: "{{teamKey}}"
  lanes:
    - steps:
        - type: action
          actionType: check:kubernetes-pod-count
          customLabel: 'GIVEN: All pods are ready'
          parameters:
            duration: 10s
            cluster: "{{k8sClusterName}}"
            namespace: "{{k8sNamespaceName}}"
            deployment: "{{k8sDeploymentName}}"
            podcount: podCountEqualsDesiredCount
        - type: attack
          parameters:
            graceful: 'true'
          attackType: container-stop-attack
          radius:
            targetType: container
            maximum: 1
            query:
              operator: AND
              predicates:
                - key: k8s.cluster-name
                  operator: EQUALS
                  values:
                    - "{{k8sClusterName}}"
                - key: k8s.namespace
                  operator: EQUALS
                  values:
                    - "{{k8sNamespaceName}}"
                - key: k8s.deployment
                  operator: EQUALS
                  values:
                    - "{{k8sDeploymentName}}"
                - key: k8s.container.name
                  operator: EQUALS
                  values:
                    - "{{containerName}}"
    - steps:
        - type: wait
          parameters:
            duration: 10s
        - type: action
          actionType: check:kubernetes-pod-count
          customLabel: 'THEN: Ready Pod Count decreases'
          parameters:
            duration: 10s
            cluster: "{{k8sClusterName}}"
            namespace: "{{k8sNamespaceName}}"
            deployment: "{{k8sDeploymentName}}"
            podcount: podCountLessThanDesiredCount
        - type: action
          actionType: check:kubernetes-pod-count
          customLabel: 'THEN: All pods are ready again within {{maximumRecoveryTime}}'
          parameters:
            duration: "{{maximumRecoveryTime}}"
            cluster: "{{k8sClusterName}}"
            namespace: "{{k8sNamespaceName}}"
            deployment: "{{k8sDeploymentName}}"
            podcount: podCountEqualsDesiredCount
